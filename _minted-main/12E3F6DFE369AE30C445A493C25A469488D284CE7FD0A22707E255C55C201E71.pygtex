\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{def} \PYG{n+nf}{bisect\PYGZus{}left}\PYG{p}{(}\PYG{n}{a}\PYG{p}{,} \PYG{n}{x}\PYG{p}{,} \PYG{n}{lo}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{hi}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{,} \PYG{o}{*}\PYG{p}{,} \PYG{n}{key}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Return the index where to insert item x in list a, assuming a is sorted.}
\PYG{l+s+sd}{    The return value i is such that all e in a[:i] have e \PYGZlt{} x, and all e in}
\PYG{l+s+sd}{    a[i:] have e \PYGZgt{}= x.  So if x already appears in the list, a.insert(i, x) will}
\PYG{l+s+sd}{    insert just before the leftmost x already there.}
\PYG{l+s+sd}{    Optional args lo (default 0) and hi (default len(a)) bound the}
\PYG{l+s+sd}{    slice of a to be searched.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}

    \PYG{k}{if} \PYG{n}{lo} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
        \PYG{k}{raise} \PYG{n+ne}{ValueError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}lo must be non\PYGZhy{}negative\PYGZsq{}}\PYG{p}{)}
    \PYG{k}{if} \PYG{n}{hi} \PYG{o+ow}{is} \PYG{k+kc}{None}\PYG{p}{:}
        \PYG{n}{hi} \PYG{o}{=} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{a}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{} Note, the comparison uses \PYGZdq{}\PYGZlt{}\PYGZdq{} to match the}
    \PYG{c+c1}{\PYGZsh{} \PYGZus{}\PYGZus{}lt\PYGZus{}\PYGZus{}() logic in list.sort() and in heapq.}
    \PYG{k}{if} \PYG{n}{key} \PYG{o+ow}{is} \PYG{k+kc}{None}\PYG{p}{:}
        \PYG{k}{while} \PYG{n}{lo} \PYG{o}{\PYGZlt{}} \PYG{n}{hi}\PYG{p}{:}
            \PYG{n}{mid} \PYG{o}{=} \PYG{p}{(}\PYG{n}{lo} \PYG{o}{+} \PYG{n}{hi}\PYG{p}{)} \PYG{o}{//} \PYG{l+m+mi}{2}
            \PYG{k}{if} \PYG{n}{a}\PYG{p}{[}\PYG{n}{mid}\PYG{p}{]} \PYG{o}{\PYGZlt{}} \PYG{n}{x}\PYG{p}{:}
                \PYG{n}{lo} \PYG{o}{=} \PYG{n}{mid} \PYG{o}{+} \PYG{l+m+mi}{1}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{hi} \PYG{o}{=} \PYG{n}{mid}
    \PYG{k}{else}\PYG{p}{:}
        \PYG{k}{while} \PYG{n}{lo} \PYG{o}{\PYGZlt{}} \PYG{n}{hi}\PYG{p}{:}
            \PYG{n}{mid} \PYG{o}{=} \PYG{p}{(}\PYG{n}{lo} \PYG{o}{+} \PYG{n}{hi}\PYG{p}{)} \PYG{o}{//} \PYG{l+m+mi}{2}
            \PYG{k}{if} \PYG{n}{key}\PYG{p}{(}\PYG{n}{a}\PYG{p}{[}\PYG{n}{mid}\PYG{p}{])} \PYG{o}{\PYGZlt{}} \PYG{n}{x}\PYG{p}{:}
                \PYG{n}{lo} \PYG{o}{=} \PYG{n}{mid} \PYG{o}{+} \PYG{l+m+mi}{1}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{hi} \PYG{o}{=} \PYG{n}{mid}
    \PYG{k}{return} \PYG{n}{lo}
\PYG{k}{def} \PYG{n+nf}{bisect\PYGZus{}right}\PYG{p}{(}\PYG{n}{a}\PYG{p}{,} \PYG{n}{x}\PYG{p}{,} \PYG{n}{lo}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{hi}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{,} \PYG{o}{*}\PYG{p}{,} \PYG{n}{key}\PYG{o}{=}\PYG{k+kc}{None}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Return the index where to insert item x in list a, assuming a is sorted.}
\PYG{l+s+sd}{    The return value i is such that all e in a[:i] have e \PYGZlt{}= x, and all e in}
\PYG{l+s+sd}{    a[i:] have e \PYGZgt{} x.  So if x already appears in the list, a.insert(i, x) will}
\PYG{l+s+sd}{    insert just after the rightmost x already there.}
\PYG{l+s+sd}{    Optional args lo (default 0) and hi (default len(a)) bound the}
\PYG{l+s+sd}{    slice of a to be searched.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}

    \PYG{k}{if} \PYG{n}{lo} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{:}
        \PYG{k}{raise} \PYG{n+ne}{ValueError}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}lo must be non\PYGZhy{}negative\PYGZsq{}}\PYG{p}{)}
    \PYG{k}{if} \PYG{n}{hi} \PYG{o+ow}{is} \PYG{k+kc}{None}\PYG{p}{:}
        \PYG{n}{hi} \PYG{o}{=} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{a}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{} Note, the comparison uses \PYGZdq{}\PYGZlt{}\PYGZdq{} to match the}
    \PYG{c+c1}{\PYGZsh{} \PYGZus{}\PYGZus{}lt\PYGZus{}\PYGZus{}() logic in list.sort() and in heapq.}
    \PYG{k}{if} \PYG{n}{key} \PYG{o+ow}{is} \PYG{k+kc}{None}\PYG{p}{:}
        \PYG{k}{while} \PYG{n}{lo} \PYG{o}{\PYGZlt{}} \PYG{n}{hi}\PYG{p}{:}
            \PYG{n}{mid} \PYG{o}{=} \PYG{p}{(}\PYG{n}{lo} \PYG{o}{+} \PYG{n}{hi}\PYG{p}{)} \PYG{o}{//} \PYG{l+m+mi}{2}
            \PYG{k}{if} \PYG{n}{x} \PYG{o}{\PYGZlt{}} \PYG{n}{a}\PYG{p}{[}\PYG{n}{mid}\PYG{p}{]:}
                \PYG{n}{hi} \PYG{o}{=} \PYG{n}{mid}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{lo} \PYG{o}{=} \PYG{n}{mid} \PYG{o}{+} \PYG{l+m+mi}{1}
    \PYG{k}{else}\PYG{p}{:}
        \PYG{k}{while} \PYG{n}{lo} \PYG{o}{\PYGZlt{}} \PYG{n}{hi}\PYG{p}{:}
            \PYG{n}{mid} \PYG{o}{=} \PYG{p}{(}\PYG{n}{lo} \PYG{o}{+} \PYG{n}{hi}\PYG{p}{)} \PYG{o}{//} \PYG{l+m+mi}{2}
            \PYG{k}{if} \PYG{n}{x} \PYG{o}{\PYGZlt{}} \PYG{n}{key}\PYG{p}{(}\PYG{n}{a}\PYG{p}{[}\PYG{n}{mid}\PYG{p}{]):}
                \PYG{n}{hi} \PYG{o}{=} \PYG{n}{mid}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{lo} \PYG{o}{=} \PYG{n}{mid} \PYG{o}{+} \PYG{l+m+mi}{1}
    \PYG{k}{return}
\end{Verbatim}
